---
# Proper Nextcloud Deployment Playbook
# Uses standard Ansible modules

- name: Deploy Nextcloud with Ansible
  hosts: util-caw
  become: yes
  vars:
    # Nextcloud version
    nextcloud_version: "27.1.2"
    
    # Database configuration
    db_name: "nextcloud"
    db_user: "nextcloud"
    db_password: "ChangeMe123!"  # Change this in production!
    
    # Web server configuration
    nextcloud_domain: "localhost"
    
    # Admin account
    admin_user: "ncadmin"
    admin_password: "ChangeMe123!"  # Change this in production!
    
    # Paths
    nextcloud_data_dir: "/var/nc-data"
    nextcloud_install_dir: "/var/www/html/nextcloud"
    
  tasks:
    - name: Install required packages
      dnf:
        name:
          - httpd
          - mariadb-server
          - php
          - php-gd
          - php-mbstring
          - php-intl
          - php-mysqlnd
          - php-opcache
          - php-xml
          - php-zip
          - php-json
          - php-curl
          - wget
          - unzip
        state: present
    
    - name: Start and enable MariaDB
      service:
        name: mariadb
        state: started
        enabled: yes
    
    - name: Start and enable Apache
      service:
        name: httpd
        state: started
        enabled: yes
    
    - name: Create database
      shell: |
        mysql -e "CREATE DATABASE IF NOT EXISTS {{ db_name }} CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci;"
        mysql -e "CREATE USER IF NOT EXISTS '{{ db_user }}'@'localhost' IDENTIFIED BY '{{ db_password }}';"
        mysql -e "GRANT ALL PRIVILEGES ON {{ db_name }}.* TO '{{ db_user }}'@'localhost';"
        mysql -e "FLUSH PRIVILEGES;"
      changed_when: false
    
    - name: Create Nextcloud data directory
      file:
        path: "{{ nextcloud_data_dir }}"
        state: directory
        owner: apache
        group: apache
        mode: '0750'
    
    - name: Check if Nextcloud is already downloaded
      stat:
        path: "/tmp/nextcloud-{{ nextcloud_version }}.zip"
      register: nextcloud_zip
    
    - name: Download Nextcloud
      get_url:
        url: "https://download.nextcloud.com/server/releases/nextcloud-{{ nextcloud_version }}.zip"
        dest: "/tmp/nextcloud-{{ nextcloud_version }}.zip"
        mode: '0644'
      when: not nextcloud_zip.stat.exists
    
    - name: Check if Nextcloud is already extracted
      stat:
        path: "{{ nextcloud_install_dir }}"
      register: nextcloud_dir
    
    - name: Extract Nextcloud
      unarchive:
        src: "/tmp/nextcloud-{{ nextcloud_version }}.zip"
        dest: "/var/www/html/"
        remote_src: yes
      when: not nextcloud_dir.stat.exists
    
    - name: Set proper ownership
      file:
        path: "{{ nextcloud_install_dir }}"
        owner: apache
        group: apache
        recurse: yes
        state: directory
    
    - name: Configure Apache for Nextcloud
      copy:
        dest: /etc/httpd/conf.d/nextcloud.conf
        content: |
          Alias /nextcloud "{{ nextcloud_install_dir }}/"

          <Directory {{ nextcloud_install_dir }}/>
            Options +FollowSymlinks
            AllowOverride All
            Require all granted
            
            <IfModule mod_dav.c>
              Dav off
            </IfModule>
          </Directory>
      notify: restart apache
    
    - name: Configure PHP for Nextcloud
      copy:
        dest: /etc/php.d/99-nextcloud.ini
        content: |
          memory_limit = 512M
          upload_max_filesize = 500M
          post_max_size = 500M
          max_execution_time = 300
          date.timezone = UTC
      notify: restart apache
    
    - name: Open firewall for HTTP
      firewalld:
        service: http
        permanent: yes
        state: enabled
      notify: reload firewall
    
    - name: Display completion message
      debug:
        msg: |
          Nextcloud files have been installed to {{ nextcloud_install_dir }}
          
          You can access Nextcloud at: http://[your-server-ip]/nextcloud
          
          Use the following details to complete the web-based setup:
            Database: MySQL/MariaDB
            Database name: {{ db_name }}
            Database user: {{ db_user }}
            Database password: {{ db_password }}
            Database host: localhost
            
            Admin username: {{ admin_user }}
            Admin password: {{ admin_password }}
  
  handlers:
    - name: restart apache
      service:
        name: httpd
        state: restarted
    
    - name: reload firewall
      service:
        name: firewalld
        state: reloaded
